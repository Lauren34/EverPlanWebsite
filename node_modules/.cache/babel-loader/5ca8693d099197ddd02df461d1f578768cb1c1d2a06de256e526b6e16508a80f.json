{"ast":null,"code":"var _jsxFileName = \"/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/Demo.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport dayjs from \"dayjs\"; // Import Dayjs types\nimport { useDateContext } from \"./DateContext\"; // Import the DateContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Demo() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    selectedDate,\n    setSelectedDate\n  } = useDateContext(); // Access the global date state\n  const [tempDate, setTempDate] = React.useState(dayjs(selectedDate)); // Local state for the temp date\n\n  // Handle date change with type safety\n  const handleDateChange = newDate => {\n    setTempDate(newDate); // Update the temporary selected date\n  };\n\n  // Cancel button handler\n  const handleCancel = () => {\n    navigate(\"/new\"); // Navigate back to New Page without saving\n  };\n\n  // OK button handler\n  const handleOk = () => {\n    if (tempDate) {\n      setSelectedDate(tempDate.format(\"MMMM D, YYYY\")); // Save the selected date to the global state\n    }\n    navigate(\"/new\"); // Navigate to the New Page\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 2,\n        border: \"1px solid #ccc\",\n        borderRadius: 4,\n        maxWidth: 400,\n        margin: \"0 auto\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DateCalendar, {\n        value: tempDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: 2,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleOk,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"Fgug9o00/Acbo3guF/wnmvK0RQ0=\", false, function () {\n  return [useNavigate, useDateContext];\n});\n_c = Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","LocalizationProvider","AdapterDayjs","DateCalendar","Box","Button","useNavigate","dayjs","useDateContext","jsxDEV","_jsxDEV","Demo","_s","navigate","selectedDate","setSelectedDate","tempDate","setTempDate","useState","handleDateChange","newDate","handleCancel","handleOk","format","dateAdapter","children","sx","display","flexDirection","alignItems","justifyContent","padding","border","borderRadius","maxWidth","margin","backgroundColor","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","width","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/Demo.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport dayjs, { Dayjs } from \"dayjs\"; // Import Dayjs types\nimport { useDateContext } from \"./DateContext\"; // Import the DateContext\n\nexport default function Demo() {\n  const navigate = useNavigate();\n  const { selectedDate, setSelectedDate } = useDateContext(); // Access the global date state\n  const [tempDate, setTempDate] = React.useState<Dayjs | null>(dayjs(selectedDate)); // Local state for the temp date\n\n  // Handle date change with type safety\n  const handleDateChange = (newDate: Dayjs | null) => {\n    setTempDate(newDate); // Update the temporary selected date\n  };\n\n  // Cancel button handler\n  const handleCancel = () => {\n    navigate(\"/new\"); // Navigate back to New Page without saving\n  };\n\n  // OK button handler\n  const handleOk = () => {\n    if (tempDate) {\n      setSelectedDate(tempDate.format(\"MMMM D, YYYY\")); // Save the selected date to the global state\n    }\n    navigate(\"/new\"); // Navigate to the New Page\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          padding: 2,\n          border: \"1px solid #ccc\",\n          borderRadius: 4,\n          maxWidth: 400,\n          margin: \"0 auto\",\n          backgroundColor: \"#fff\",\n        }}\n      >\n        {/* Calendar Component */}\n        <DateCalendar value={tempDate} onChange={handleDateChange} />\n\n        {/* Action Buttons */}\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 2,\n            width: \"100%\",\n          }}\n        >\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleOk}>\n            OK\n          </Button>\n        </Box>\n      </Box>\n    </LocalizationProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}