{"ast":null,"code":"var _jsxFileName = \"/Users/ilanalesser/PycharmProjects/PythonProject3/src/Demo.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\"; // React Router hook for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StyledDateCalendar() {\n  _s();\n  const [selectedDate, setSelectedDate] = React.useState(null); // Track the selected date\n  const navigate = useNavigate(); // Hook to navigate between pages\n\n  const handleDateChange = newDate => {\n    setSelectedDate(newDate); // Update selected date when the user picks a date\n  };\n  const handleOk = () => {\n    if (selectedDate) {\n      navigate(\"/confirmation\", {\n        state: {\n          date: selectedDate.format(\"MMMM DD, YYYY\")\n        }\n      });\n    } else {\n      alert(\"Please select a date first!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 3,\n        border: \"1px solid #ccc\",\n        borderRadius: 4,\n        maxWidth: 450,\n        margin: \"0 auto\",\n        backgroundColor: \"#fdfdfd\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          fontFamily: \"Cormorant Garamond, serif\",\n          fontWeight: \"bold\",\n          marginBottom: 1,\n          color: \"#333\"\n        },\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: 2,\n          border: \"1px solid #ddd\",\n          borderRadius: 4,\n          backgroundColor: \"#fff\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DateCalendar, {\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: 3,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleOk,\n          sx: {\n            fontFamily: \"Roboto, sans-serif\",\n            textTransform: \"none\",\n            padding: \"6px 16px\"\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(StyledDateCalendar, \"Q6CwC/4Ko/Y/HuA171iBPNHuaR0=\", false, function () {\n  return [useNavigate];\n});\n_c = StyledDateCalendar;\nvar _c;\n$RefreshReg$(_c, \"StyledDateCalendar\");","map":{"version":3,"names":["React","LocalizationProvider","AdapterDayjs","DateCalendar","Box","Button","Typography","useNavigate","jsxDEV","_jsxDEV","StyledDateCalendar","_s","selectedDate","setSelectedDate","useState","navigate","handleDateChange","newDate","handleOk","state","date","format","alert","dateAdapter","children","sx","display","flexDirection","alignItems","justifyContent","padding","border","borderRadius","maxWidth","margin","backgroundColor","boxShadow","variant","fontFamily","fontWeight","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","marginTop","width","onClick","textTransform","_c","$RefreshReg$"],"sources":["/Users/ilanalesser/PycharmProjects/PythonProject3/src/Demo.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\"; // React Router hook for navigation\n\nexport default function StyledDateCalendar() {\n  const [selectedDate, setSelectedDate] = React.useState<Dayjs | null>(null); // Track the selected date\n  const navigate = useNavigate(); // Hook to navigate between pages\n\n  const handleDateChange = (newDate: Dayjs | null) => {\n    setSelectedDate(newDate); // Update selected date when the user picks a date\n  };\n\n  const handleOk = () => {\n    if (selectedDate) {\n      navigate(\"/confirmation\", { state: { date: selectedDate.format(\"MMMM DD, YYYY\") } });\n    } else {\n      alert(\"Please select a date first!\");\n    }\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          padding: 3,\n          border: \"1px solid #ccc\",\n          borderRadius: 4,\n          maxWidth: 450,\n          margin: \"0 auto\",\n          backgroundColor: \"#fdfdfd\",\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        {/* Header */}\n        <Typography\n          variant=\"h4\"\n          sx={{\n            fontFamily: \"Cormorant Garamond, serif\",\n            fontWeight: \"bold\",\n            marginBottom: 1,\n            color: \"#333\",\n          }}\n        >\n          Calendar\n        </Typography>\n\n        {/* Calendar */}\n        <Box\n          sx={{\n            padding: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 4,\n            backgroundColor: \"#fff\",\n          }}\n        >\n          <DateCalendar value={selectedDate} onChange={handleDateChange} />\n        </Box>\n\n        {/* Buttons */}\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 3,\n            width: \"100%\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOk}\n            sx={{\n              fontFamily: \"Roboto, sans-serif\",\n              textTransform: \"none\",\n              padding: \"6px 16px\",\n            }}\n          >\n            OK\n          </Button>\n        </Box>\n      </Box>\n    </LocalizationProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}