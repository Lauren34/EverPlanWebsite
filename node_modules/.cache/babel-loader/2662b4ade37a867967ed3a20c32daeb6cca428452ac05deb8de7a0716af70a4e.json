{"ast":null,"code":"var _jsxFileName = \"/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/Demo.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Demo() {\n  _s();\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = React.useState(null); // No date selected by default\n\n  const handleOk = () => {\n    if (selectedDate) {\n      navigate(\"/new\"); // Navigate to the New Page\n    }\n  };\n  const handleDateChange = newDate => {\n    setSelectedDate(newDate); // Update the selected date\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 2,\n        border: \"1px solid #ccc\",\n        borderRadius: 4,\n        maxWidth: 400,\n        margin: \"0 auto\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DateCalendar, {\n        value: selectedDate,\n        onChange: handleDateChange,\n        disablePast: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: 2,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => setSelectedDate(null) // Clear the selected date\n          ,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleOk,\n          disabled: !selectedDate // Disable button if no date is selected\n          ,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"rTilFtQ9qaBvTrpZOwvcJGO8pE0=\", false, function () {\n  return [useNavigate];\n});\n_c = Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","LocalizationProvider","AdapterDayjs","DateCalendar","Box","Button","useNavigate","jsxDEV","_jsxDEV","Demo","_s","navigate","selectedDate","setSelectedDate","useState","handleOk","handleDateChange","newDate","dateAdapter","children","sx","display","flexDirection","alignItems","justifyContent","padding","border","borderRadius","maxWidth","margin","backgroundColor","value","onChange","disablePast","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","width","variant","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/Demo.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport dayjs, { Dayjs } from \"dayjs\";\n\nexport default function Demo() {\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = React.useState<Dayjs | null>(null); // No date selected by default\n\n  const handleOk = () => {\n    if (selectedDate) {\n      navigate(\"/new\"); // Navigate to the New Page\n    }\n  };\n\n  const handleDateChange = (newDate) => {\n    setSelectedDate(newDate); // Update the selected date\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          padding: 2,\n          border: \"1px solid #ccc\",\n          borderRadius: 4,\n          maxWidth: 400,\n          margin: \"0 auto\",\n          backgroundColor: \"#fff\",\n        }}\n      >\n        {/* Calendar Component */}\n        <DateCalendar\n          value={selectedDate}\n          onChange={handleDateChange}\n          disablePast\n        />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 2,\n            width: \"100%\",\n          }}\n        >\n          {/* Cancel Button */}\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setSelectedDate(null)} // Clear the selected date\n          >\n            Cancel\n          </Button>\n\n          {/* OK Button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOk}\n            disabled={!selectedDate} // Disable button if no date is selected\n          >\n            OK\n          </Button>\n        </Box>\n      </Box>\n    </LocalizationProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAe,IAAI,CAAC,CAAC,CAAC;;EAE5E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIH,YAAY,EAAE;MAChBD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAIC,OAAO,IAAK;IACpCJ,eAAe,CAACI,OAAO,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACET,OAAA,CAACP,oBAAoB;IAACiB,WAAW,EAAEhB,YAAa;IAAAiB,QAAA,eAC9CX,OAAA,CAACJ,GAAG;MACFgB,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,OAAO,EAAE,CAAC;QACVC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE,QAAQ;QAChBC,eAAe,EAAE;MACnB,CAAE;MAAAX,QAAA,gBAGFX,OAAA,CAACL,YAAY;QACX4B,KAAK,EAAEnB,YAAa;QACpBoB,QAAQ,EAAEhB,gBAAiB;QAC3BiB,WAAW;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACF7B,OAAA,CAACJ,GAAG;QACFgB,EAAE,EAAE;UACFC,OAAO,EAAE,MAAM;UACfG,cAAc,EAAE,eAAe;UAC/Bc,SAAS,EAAE,CAAC;UACZC,KAAK,EAAE;QACT,CAAE;QAAApB,QAAA,gBAGFX,OAAA,CAACH,MAAM;UACLmC,OAAO,EAAC,UAAU;UAClBC,KAAK,EAAC,WAAW;UACjBC,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAAC,IAAI,CAAE,CAAC;UAAA;UAAAM,QAAA,EACvC;QAED;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGT7B,OAAA,CAACH,MAAM;UACLmC,OAAO,EAAC,WAAW;UACnBC,KAAK,EAAC,SAAS;UACfC,OAAO,EAAE3B,QAAS;UAClB4B,QAAQ,EAAE,CAAC/B,YAAa,CAAC;UAAA;UAAAO,QAAA,EAC1B;QAED;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE3B;AAAC3B,EAAA,CAlEuBD,IAAI;EAAA,QACTH,WAAW;AAAA;AAAAsC,EAAA,GADNnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}