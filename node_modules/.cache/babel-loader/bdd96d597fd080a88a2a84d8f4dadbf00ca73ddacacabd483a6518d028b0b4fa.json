{"ast":null,"code":"var _jsxFileName = \"/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/NewPage.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport NavigationBar from \"./NavigationBar\";\nimport DateRangeIcon from \"@mui/icons-material/DateRange\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewPage() {\n  _s();\n  const [selectedDate, setSelectedDate] = React.useState(\"January 22, 2025\");\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleChangeDate = () => {\n    navigate(\"/calendar\"); // Navigate to the calendar page\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        fontWeight: \"bold\",\n        children: [\"Selected Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(DateRangeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this),\n        sx: {\n          marginLeft: 1,\n          textTransform: \"capitalize\",\n          color: \"primary.main\",\n          fontWeight: \"bold\"\n        },\n        onClick: handleChangeDate,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 2,\n          justifyContent: \"center\"\n        },\n        children: [...Array(9)].map((_, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: \"100%\",\n            // Responsive width\n            maxWidth: 300,\n            // Limit the width for smaller screens\n            backgroundColor: \"#f9f9f9\",\n            padding: 2,\n            borderRadius: 2,\n            boxShadow: 1,\n            textAlign: \"center\",\n            height: 250,\n            // Uniform height\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            border: \"1px dashed #ccc\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: \"#aaa\",\n              fontStyle: \"italic\"\n            },\n            children: [\"Placeholder for Item \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NewPage, \"9cqsvUmMMwCAyvF1LE4/1tqjvyU=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPage;\nvar _c;\n$RefreshReg$(_c, \"NewPage\");","map":{"version":3,"names":["React","Box","Typography","Button","NavigationBar","DateRangeIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPage","_s","selectedDate","setSelectedDate","useState","navigate","handleChangeDate","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","alignItems","justifyContent","marginTop","variant","fontWeight","startIcon","marginLeft","textTransform","color","onClick","padding","gridTemplateColumns","gap","Array","map","_","index","width","maxWidth","backgroundColor","borderRadius","boxShadow","textAlign","height","border","fontStyle","_c","$RefreshReg$"],"sources":["/Users/ilanalesser/PycharmProjects/PythonProject3/src/pages/NewPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport NavigationBar from \"./NavigationBar\";\nimport DateRangeIcon from \"@mui/icons-material/DateRange\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NewPage() {\n  const [selectedDate, setSelectedDate] = React.useState(\"January 22, 2025\");\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleChangeDate = () => {\n    navigate(\"/calendar\"); // Navigate to the calendar page\n  };\n\n  return (\n    <>\n      {/* Navigation Bar */}\n      <NavigationBar />\n\n      {/* Selected Date Section */}\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 2,\n        }}\n      >\n        <Typography variant=\"body1\" fontWeight=\"bold\">\n          Selected Date: {selectedDate}\n        </Typography>\n        <Button\n          startIcon={<DateRangeIcon />}\n          sx={{\n            marginLeft: 1,\n            textTransform: \"capitalize\",\n            color: \"primary.main\",\n            fontWeight: \"bold\",\n          }}\n          onClick={handleChangeDate}\n        >\n          Change\n        </Button>\n      </Box>\n\n      {/* Listings Template Grid */}\n      <Box sx={{ padding: 4 }}>\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n            gap: 2,\n            justifyContent: \"center\",\n          }}\n        >\n          {/* Dynamic placeholders for listing items */}\n          {[...Array(9)].map((_, index) => (\n            <Box\n              key={index}\n              sx={{\n                width: \"100%\", // Responsive width\n                maxWidth: 300, // Limit the width for smaller screens\n                backgroundColor: \"#f9f9f9\",\n                padding: 2,\n                borderRadius: 2,\n                boxShadow: 1,\n                textAlign: \"center\",\n                height: 250, // Uniform height\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                border: \"1px dashed #ccc\",\n              }}\n            >\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  color: \"#aaa\",\n                  fontStyle: \"italic\",\n                }}\n              >\n                Placeholder for Item {index + 1}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}